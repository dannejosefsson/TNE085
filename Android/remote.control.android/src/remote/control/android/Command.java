// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Command.proto

package remote.control.android;

public final class Command {
  private Command() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AccelerometerDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint32 x_value = 1;
    boolean hasXValue();
    int getXValue();
    
    // required uint32 y_value = 2;
    boolean hasYValue();
    int getYValue();
    
    // required uint32 z_value = 3;
    boolean hasZValue();
    int getZValue();
  }
  public static final class AccelerometerData extends
      com.google.protobuf.GeneratedMessage
      implements AccelerometerDataOrBuilder {
    // Use AccelerometerData.newBuilder() to construct.
    private AccelerometerData(Builder builder) {
      super(builder);
    }
    private AccelerometerData(boolean noInit) {}
    
    private static final AccelerometerData defaultInstance;
    public static AccelerometerData getDefaultInstance() {
      return defaultInstance;
    }
    
    public AccelerometerData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return remote.control.android.Command.internal_static_on_hover_android_AccelerometerData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return remote.control.android.Command.internal_static_on_hover_android_AccelerometerData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required uint32 x_value = 1;
    public static final int X_VALUE_FIELD_NUMBER = 1;
    private int xValue_;
    public boolean hasXValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getXValue() {
      return xValue_;
    }
    
    // required uint32 y_value = 2;
    public static final int Y_VALUE_FIELD_NUMBER = 2;
    private int yValue_;
    public boolean hasYValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getYValue() {
      return yValue_;
    }
    
    // required uint32 z_value = 3;
    public static final int Z_VALUE_FIELD_NUMBER = 3;
    private int zValue_;
    public boolean hasZValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getZValue() {
      return zValue_;
    }
    
    private void initFields() {
      xValue_ = 0;
      yValue_ = 0;
      zValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasXValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, xValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, yValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, zValue_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, xValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, yValue_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, zValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static remote.control.android.Command.AccelerometerData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.AccelerometerData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.AccelerometerData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(remote.control.android.Command.AccelerometerData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements remote.control.android.Command.AccelerometerDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return remote.control.android.Command.internal_static_on_hover_android_AccelerometerData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return remote.control.android.Command.internal_static_on_hover_android_AccelerometerData_fieldAccessorTable;
      }
      
      // Construct using remote.control.android.Command.AccelerometerData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        xValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        yValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        zValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return remote.control.android.Command.AccelerometerData.getDescriptor();
      }
      
      public remote.control.android.Command.AccelerometerData getDefaultInstanceForType() {
        return remote.control.android.Command.AccelerometerData.getDefaultInstance();
      }
      
      public remote.control.android.Command.AccelerometerData build() {
        remote.control.android.Command.AccelerometerData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private remote.control.android.Command.AccelerometerData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        remote.control.android.Command.AccelerometerData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public remote.control.android.Command.AccelerometerData buildPartial() {
        remote.control.android.Command.AccelerometerData result = new remote.control.android.Command.AccelerometerData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.xValue_ = xValue_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.yValue_ = yValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.zValue_ = zValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof remote.control.android.Command.AccelerometerData) {
          return mergeFrom((remote.control.android.Command.AccelerometerData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(remote.control.android.Command.AccelerometerData other) {
        if (other == remote.control.android.Command.AccelerometerData.getDefaultInstance()) return this;
        if (other.hasXValue()) {
          setXValue(other.getXValue());
        }
        if (other.hasYValue()) {
          setYValue(other.getYValue());
        }
        if (other.hasZValue()) {
          setZValue(other.getZValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasXValue()) {
          
          return false;
        }
        if (!hasYValue()) {
          
          return false;
        }
        if (!hasZValue()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              xValue_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              yValue_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              zValue_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint32 x_value = 1;
      private int xValue_ ;
      public boolean hasXValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getXValue() {
        return xValue_;
      }
      public Builder setXValue(int value) {
        bitField0_ |= 0x00000001;
        xValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearXValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xValue_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 y_value = 2;
      private int yValue_ ;
      public boolean hasYValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getYValue() {
        return yValue_;
      }
      public Builder setYValue(int value) {
        bitField0_ |= 0x00000002;
        yValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearYValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        yValue_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 z_value = 3;
      private int zValue_ ;
      public boolean hasZValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getZValue() {
        return zValue_;
      }
      public Builder setZValue(int value) {
        bitField0_ |= 0x00000004;
        zValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearZValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        zValue_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:remote.control.android.AccelerometerData)
    }
    
    static {
      defaultInstance = new AccelerometerData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:remote.control.android.AccelerometerData)
  }
  
  public interface USSensorDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string type = 1;
    boolean hasType();
    String getType();
    
    // required string description = 2;
    boolean hasDescription();
    String getDescription();
    
    // required uint32 echopin = 3;
    boolean hasEchopin();
    int getEchopin();
    
    // required uint32 triggerpin = 4;
    boolean hasTriggerpin();
    int getTriggerpin();
    
    // required uint32 value = 5;
    boolean hasValue();
    int getValue();
  }
  public static final class USSensorData extends
      com.google.protobuf.GeneratedMessage
      implements USSensorDataOrBuilder {
    // Use USSensorData.newBuilder() to construct.
    private USSensorData(Builder builder) {
      super(builder);
    }
    private USSensorData(boolean noInit) {}
    
    private static final USSensorData defaultInstance;
    public static USSensorData getDefaultInstance() {
      return defaultInstance;
    }
    
    public USSensorData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return remote.control.android.Command.internal_static_on_hover_android_USSensorData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return remote.control.android.Command.internal_static_on_hover_android_USSensorData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string description = 2;
    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.Object description_;
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          description_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 echopin = 3;
    public static final int ECHOPIN_FIELD_NUMBER = 3;
    private int echopin_;
    public boolean hasEchopin() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getEchopin() {
      return echopin_;
    }
    
    // required uint32 triggerpin = 4;
    public static final int TRIGGERPIN_FIELD_NUMBER = 4;
    private int triggerpin_;
    public boolean hasTriggerpin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTriggerpin() {
      return triggerpin_;
    }
    
    // required uint32 value = 5;
    public static final int VALUE_FIELD_NUMBER = 5;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getValue() {
      return value_;
    }
    
    private void initFields() {
      type_ = "";
      description_ = "";
      echopin_ = 0;
      triggerpin_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEchopin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTriggerpin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, echopin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, triggerpin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, value_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, echopin_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, triggerpin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static remote.control.android.Command.USSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.USSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.USSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.USSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(remote.control.android.Command.USSensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements remote.control.android.Command.USSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return remote.control.android.Command.internal_static_on_hover_android_USSensorData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return remote.control.android.Command.internal_static_on_hover_android_USSensorData_fieldAccessorTable;
      }
      
      // Construct using remote.control.android.Command.USSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        echopin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        triggerpin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return remote.control.android.Command.USSensorData.getDescriptor();
      }
      
      public remote.control.android.Command.USSensorData getDefaultInstanceForType() {
        return remote.control.android.Command.USSensorData.getDefaultInstance();
      }
      
      public remote.control.android.Command.USSensorData build() {
        remote.control.android.Command.USSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private remote.control.android.Command.USSensorData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        remote.control.android.Command.USSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public remote.control.android.Command.USSensorData buildPartial() {
        remote.control.android.Command.USSensorData result = new remote.control.android.Command.USSensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.echopin_ = echopin_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.triggerpin_ = triggerpin_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof remote.control.android.Command.USSensorData) {
          return mergeFrom((remote.control.android.Command.USSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(remote.control.android.Command.USSensorData other) {
        if (other == remote.control.android.Command.USSensorData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasEchopin()) {
          setEchopin(other.getEchopin());
        }
        if (other.hasTriggerpin()) {
          setTriggerpin(other.getTriggerpin());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasDescription()) {
          
          return false;
        }
        if (!hasEchopin()) {
          
          return false;
        }
        if (!hasTriggerpin()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              description_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              echopin_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              triggerpin_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              value_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string type = 1;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
      }
      
      // required string description = 2;
      private java.lang.Object description_ = "";
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDescription(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      void setDescription(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
      }
      
      // required uint32 echopin = 3;
      private int echopin_ ;
      public boolean hasEchopin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getEchopin() {
        return echopin_;
      }
      public Builder setEchopin(int value) {
        bitField0_ |= 0x00000004;
        echopin_ = value;
        onChanged();
        return this;
      }
      public Builder clearEchopin() {
        bitField0_ = (bitField0_ & ~0x00000004);
        echopin_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 triggerpin = 4;
      private int triggerpin_ ;
      public boolean hasTriggerpin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTriggerpin() {
        return triggerpin_;
      }
      public Builder setTriggerpin(int value) {
        bitField0_ |= 0x00000008;
        triggerpin_ = value;
        onChanged();
        return this;
      }
      public Builder clearTriggerpin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        triggerpin_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 value = 5;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000010;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:remote.control.android.USSensorData)
    }
    
    static {
      defaultInstance = new USSensorData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:remote.control.android.USSensorData)
  }
  
  public interface I2CSensorDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string type = 1;
    boolean hasType();
    String getType();
    
    // required string description = 2;
    boolean hasDescription();
    String getDescription();
    
    // required uint32 address = 3;
    boolean hasAddress();
    int getAddress();
    
    // required uint32 value = 4;
    boolean hasValue();
    int getValue();
  }
  public static final class I2CSensorData extends
      com.google.protobuf.GeneratedMessage
      implements I2CSensorDataOrBuilder {
    // Use I2CSensorData.newBuilder() to construct.
    private I2CSensorData(Builder builder) {
      super(builder);
    }
    private I2CSensorData(boolean noInit) {}
    
    private static final I2CSensorData defaultInstance;
    public static I2CSensorData getDefaultInstance() {
      return defaultInstance;
    }
    
    public I2CSensorData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return remote.control.android.Command.internal_static_on_hover_android_I2CSensorData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return remote.control.android.Command.internal_static_on_hover_android_I2CSensorData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string description = 2;
    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.Object description_;
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          description_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required uint32 address = 3;
    public static final int ADDRESS_FIELD_NUMBER = 3;
    private int address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getAddress() {
      return address_;
    }
    
    // required uint32 value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private int value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getValue() {
      return value_;
    }
    
    private void initFields() {
      type_ = "";
      description_ = "";
      address_ = 0;
      value_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, address_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, value_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, address_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static remote.control.android.Command.I2CSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.I2CSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.I2CSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(remote.control.android.Command.I2CSensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements remote.control.android.Command.I2CSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return remote.control.android.Command.internal_static_on_hover_android_I2CSensorData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return remote.control.android.Command.internal_static_on_hover_android_I2CSensorData_fieldAccessorTable;
      }
      
      // Construct using remote.control.android.Command.I2CSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return remote.control.android.Command.I2CSensorData.getDescriptor();
      }
      
      public remote.control.android.Command.I2CSensorData getDefaultInstanceForType() {
        return remote.control.android.Command.I2CSensorData.getDefaultInstance();
      }
      
      public remote.control.android.Command.I2CSensorData build() {
        remote.control.android.Command.I2CSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private remote.control.android.Command.I2CSensorData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        remote.control.android.Command.I2CSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public remote.control.android.Command.I2CSensorData buildPartial() {
        remote.control.android.Command.I2CSensorData result = new remote.control.android.Command.I2CSensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof remote.control.android.Command.I2CSensorData) {
          return mergeFrom((remote.control.android.Command.I2CSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(remote.control.android.Command.I2CSensorData other) {
        if (other == remote.control.android.Command.I2CSensorData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasDescription()) {
          
          return false;
        }
        if (!hasAddress()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              type_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              description_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              address_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              value_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string type = 1;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
      }
      
      // required string description = 2;
      private java.lang.Object description_ = "";
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDescription(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      void setDescription(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
      }
      
      // required uint32 address = 3;
      private int address_ ;
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getAddress() {
        return address_;
      }
      public Builder setAddress(int value) {
        bitField0_ |= 0x00000004;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        address_ = 0;
        onChanged();
        return this;
      }
      
      // required uint32 value = 4;
      private int value_ ;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getValue() {
        return value_;
      }
      public Builder setValue(int value) {
        bitField0_ |= 0x00000008;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        value_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:remote.control.android.I2CSensorData)
    }
    
    static {
      defaultInstance = new I2CSensorData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:remote.control.android.I2CSensorData)
  }
  
  public interface DriveSignalsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bool forward = 1;
    boolean hasForward();
    boolean getForward();
    
    // required bool enable = 2;
    boolean hasEnable();
    boolean getEnable();
    
    // required uint32 power = 3;
    boolean hasPower();
    int getPower();
  }
  public static final class DriveSignals extends
      com.google.protobuf.GeneratedMessage
      implements DriveSignalsOrBuilder {
    // Use DriveSignals.newBuilder() to construct.
    private DriveSignals(Builder builder) {
      super(builder);
    }
    private DriveSignals(boolean noInit) {}
    
    private static final DriveSignals defaultInstance;
    public static DriveSignals getDefaultInstance() {
      return defaultInstance;
    }
    
    public DriveSignals getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return remote.control.android.Command.internal_static_on_hover_android_DriveSignals_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return remote.control.android.Command.internal_static_on_hover_android_DriveSignals_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required bool forward = 1;
    public static final int FORWARD_FIELD_NUMBER = 1;
    private boolean forward_;
    public boolean hasForward() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getForward() {
      return forward_;
    }
    
    // required bool enable = 2;
    public static final int ENABLE_FIELD_NUMBER = 2;
    private boolean enable_;
    public boolean hasEnable() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getEnable() {
      return enable_;
    }
    
    // required uint32 power = 3;
    public static final int POWER_FIELD_NUMBER = 3;
    private int power_;
    public boolean hasPower() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPower() {
      return power_;
    }
    
    private void initFields() {
      forward_ = false;
      enable_ = false;
      power_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasForward()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPower()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, forward_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, enable_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, power_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, forward_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, enable_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, power_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static remote.control.android.Command.DriveSignals parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.DriveSignals parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.DriveSignals parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.DriveSignals parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(remote.control.android.Command.DriveSignals prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements remote.control.android.Command.DriveSignalsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return remote.control.android.Command.internal_static_on_hover_android_DriveSignals_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return remote.control.android.Command.internal_static_on_hover_android_DriveSignals_fieldAccessorTable;
      }
      
      // Construct using remote.control.android.Command.DriveSignals.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        forward_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        enable_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        power_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return remote.control.android.Command.DriveSignals.getDescriptor();
      }
      
      public remote.control.android.Command.DriveSignals getDefaultInstanceForType() {
        return remote.control.android.Command.DriveSignals.getDefaultInstance();
      }
      
      public remote.control.android.Command.DriveSignals build() {
        remote.control.android.Command.DriveSignals result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private remote.control.android.Command.DriveSignals buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        remote.control.android.Command.DriveSignals result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public remote.control.android.Command.DriveSignals buildPartial() {
        remote.control.android.Command.DriveSignals result = new remote.control.android.Command.DriveSignals(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.forward_ = forward_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.enable_ = enable_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.power_ = power_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof remote.control.android.Command.DriveSignals) {
          return mergeFrom((remote.control.android.Command.DriveSignals)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(remote.control.android.Command.DriveSignals other) {
        if (other == remote.control.android.Command.DriveSignals.getDefaultInstance()) return this;
        if (other.hasForward()) {
          setForward(other.getForward());
        }
        if (other.hasEnable()) {
          setEnable(other.getEnable());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasForward()) {
          
          return false;
        }
        if (!hasEnable()) {
          
          return false;
        }
        if (!hasPower()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              forward_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              enable_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              power_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bool forward = 1;
      private boolean forward_ ;
      public boolean hasForward() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getForward() {
        return forward_;
      }
      public Builder setForward(boolean value) {
        bitField0_ |= 0x00000001;
        forward_ = value;
        onChanged();
        return this;
      }
      public Builder clearForward() {
        bitField0_ = (bitField0_ & ~0x00000001);
        forward_ = false;
        onChanged();
        return this;
      }
      
      // required bool enable = 2;
      private boolean enable_ ;
      public boolean hasEnable() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getEnable() {
        return enable_;
      }
      public Builder setEnable(boolean value) {
        bitField0_ |= 0x00000002;
        enable_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        enable_ = false;
        onChanged();
        return this;
      }
      
      // required uint32 power = 3;
      private int power_ ;
      public boolean hasPower() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPower() {
        return power_;
      }
      public Builder setPower(int value) {
        bitField0_ |= 0x00000004;
        power_ = value;
        onChanged();
        return this;
      }
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000004);
        power_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:remote.control.android.DriveSignals)
    }
    
    static {
      defaultInstance = new DriveSignals(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:remote.control.android.DriveSignals)
  }
  
  public interface EnginesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .remote.control.android.DriveSignals right = 1;
    boolean hasRight();
    remote.control.android.Command.DriveSignals getRight();
    remote.control.android.Command.DriveSignalsOrBuilder getRightOrBuilder();
    
    // required .remote.control.android.DriveSignals left = 2;
    boolean hasLeft();
    remote.control.android.Command.DriveSignals getLeft();
    remote.control.android.Command.DriveSignalsOrBuilder getLeftOrBuilder();
  }
  public static final class Engines extends
      com.google.protobuf.GeneratedMessage
      implements EnginesOrBuilder {
    // Use Engines.newBuilder() to construct.
    private Engines(Builder builder) {
      super(builder);
    }
    private Engines(boolean noInit) {}
    
    private static final Engines defaultInstance;
    public static Engines getDefaultInstance() {
      return defaultInstance;
    }
    
    public Engines getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return remote.control.android.Command.internal_static_on_hover_android_Engines_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return remote.control.android.Command.internal_static_on_hover_android_Engines_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required .remote.control.android.DriveSignals right = 1;
    public static final int RIGHT_FIELD_NUMBER = 1;
    private remote.control.android.Command.DriveSignals right_;
    public boolean hasRight() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public remote.control.android.Command.DriveSignals getRight() {
      return right_;
    }
    public remote.control.android.Command.DriveSignalsOrBuilder getRightOrBuilder() {
      return right_;
    }
    
    // required .remote.control.android.DriveSignals left = 2;
    public static final int LEFT_FIELD_NUMBER = 2;
    private remote.control.android.Command.DriveSignals left_;
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public remote.control.android.Command.DriveSignals getLeft() {
      return left_;
    }
    public remote.control.android.Command.DriveSignalsOrBuilder getLeftOrBuilder() {
      return left_;
    }
    
    private void initFields() {
      right_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
      left_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRight().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLeft().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, right_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, left_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, right_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, left_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static remote.control.android.Command.Engines parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.Engines parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.Engines parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static remote.control.android.Command.Engines parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.Engines parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.Engines parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static remote.control.android.Command.Engines parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.Engines parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static remote.control.android.Command.Engines parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static remote.control.android.Command.Engines parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(remote.control.android.Command.Engines prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements remote.control.android.Command.EnginesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return remote.control.android.Command.internal_static_on_hover_android_Engines_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return remote.control.android.Command.internal_static_on_hover_android_Engines_fieldAccessorTable;
      }
      
      // Construct using remote.control.android.Command.Engines.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRightFieldBuilder();
          getLeftFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (rightBuilder_ == null) {
          right_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
        } else {
          rightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (leftBuilder_ == null) {
          left_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
        } else {
          leftBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return remote.control.android.Command.Engines.getDescriptor();
      }
      
      public remote.control.android.Command.Engines getDefaultInstanceForType() {
        return remote.control.android.Command.Engines.getDefaultInstance();
      }
      
      public remote.control.android.Command.Engines build() {
        remote.control.android.Command.Engines result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private remote.control.android.Command.Engines buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        remote.control.android.Command.Engines result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public remote.control.android.Command.Engines buildPartial() {
        remote.control.android.Command.Engines result = new remote.control.android.Command.Engines(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (rightBuilder_ == null) {
          result.right_ = right_;
        } else {
          result.right_ = rightBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (leftBuilder_ == null) {
          result.left_ = left_;
        } else {
          result.left_ = leftBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof remote.control.android.Command.Engines) {
          return mergeFrom((remote.control.android.Command.Engines)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(remote.control.android.Command.Engines other) {
        if (other == remote.control.android.Command.Engines.getDefaultInstance()) return this;
        if (other.hasRight()) {
          mergeRight(other.getRight());
        }
        if (other.hasLeft()) {
          mergeLeft(other.getLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRight()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!getRight().isInitialized()) {
          
          return false;
        }
        if (!getLeft().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              remote.control.android.Command.DriveSignals.Builder subBuilder = remote.control.android.Command.DriveSignals.newBuilder();
              if (hasRight()) {
                subBuilder.mergeFrom(getRight());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRight(subBuilder.buildPartial());
              break;
            }
            case 18: {
              remote.control.android.Command.DriveSignals.Builder subBuilder = remote.control.android.Command.DriveSignals.newBuilder();
              if (hasLeft()) {
                subBuilder.mergeFrom(getLeft());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLeft(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .remote.control.android.DriveSignals right = 1;
      private remote.control.android.Command.DriveSignals right_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          remote.control.android.Command.DriveSignals, remote.control.android.Command.DriveSignals.Builder, remote.control.android.Command.DriveSignalsOrBuilder> rightBuilder_;
      public boolean hasRight() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public remote.control.android.Command.DriveSignals getRight() {
        if (rightBuilder_ == null) {
          return right_;
        } else {
          return rightBuilder_.getMessage();
        }
      }
      public Builder setRight(remote.control.android.Command.DriveSignals value) {
        if (rightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          right_ = value;
          onChanged();
        } else {
          rightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setRight(
          remote.control.android.Command.DriveSignals.Builder builderForValue) {
        if (rightBuilder_ == null) {
          right_ = builderForValue.build();
          onChanged();
        } else {
          rightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeRight(remote.control.android.Command.DriveSignals value) {
        if (rightBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              right_ != remote.control.android.Command.DriveSignals.getDefaultInstance()) {
            right_ =
              remote.control.android.Command.DriveSignals.newBuilder(right_).mergeFrom(value).buildPartial();
          } else {
            right_ = value;
          }
          onChanged();
        } else {
          rightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearRight() {
        if (rightBuilder_ == null) {
          right_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
          onChanged();
        } else {
          rightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public remote.control.android.Command.DriveSignals.Builder getRightBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRightFieldBuilder().getBuilder();
      }
      public remote.control.android.Command.DriveSignalsOrBuilder getRightOrBuilder() {
        if (rightBuilder_ != null) {
          return rightBuilder_.getMessageOrBuilder();
        } else {
          return right_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          remote.control.android.Command.DriveSignals, remote.control.android.Command.DriveSignals.Builder, remote.control.android.Command.DriveSignalsOrBuilder> 
          getRightFieldBuilder() {
        if (rightBuilder_ == null) {
          rightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              remote.control.android.Command.DriveSignals, remote.control.android.Command.DriveSignals.Builder, remote.control.android.Command.DriveSignalsOrBuilder>(
                  right_,
                  getParentForChildren(),
                  isClean());
          right_ = null;
        }
        return rightBuilder_;
      }
      
      // required .remote.control.android.DriveSignals left = 2;
      private remote.control.android.Command.DriveSignals left_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          remote.control.android.Command.DriveSignals, remote.control.android.Command.DriveSignals.Builder, remote.control.android.Command.DriveSignalsOrBuilder> leftBuilder_;
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public remote.control.android.Command.DriveSignals getLeft() {
        if (leftBuilder_ == null) {
          return left_;
        } else {
          return leftBuilder_.getMessage();
        }
      }
      public Builder setLeft(remote.control.android.Command.DriveSignals value) {
        if (leftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          left_ = value;
          onChanged();
        } else {
          leftBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setLeft(
          remote.control.android.Command.DriveSignals.Builder builderForValue) {
        if (leftBuilder_ == null) {
          left_ = builderForValue.build();
          onChanged();
        } else {
          leftBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeLeft(remote.control.android.Command.DriveSignals value) {
        if (leftBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              left_ != remote.control.android.Command.DriveSignals.getDefaultInstance()) {
            left_ =
              remote.control.android.Command.DriveSignals.newBuilder(left_).mergeFrom(value).buildPartial();
          } else {
            left_ = value;
          }
          onChanged();
        } else {
          leftBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearLeft() {
        if (leftBuilder_ == null) {
          left_ = remote.control.android.Command.DriveSignals.getDefaultInstance();
          onChanged();
        } else {
          leftBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public remote.control.android.Command.DriveSignals.Builder getLeftBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLeftFieldBuilder().getBuilder();
      }
      public remote.control.android.Command.DriveSignalsOrBuilder getLeftOrBuilder() {
        if (leftBuilder_ != null) {
          return leftBuilder_.getMessageOrBuilder();
        } else {
          return left_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          remote.control.android.Command.DriveSignals, remote.control.android.Command.DriveSignals.Builder, remote.control.android.Command.DriveSignalsOrBuilder> 
          getLeftFieldBuilder() {
        if (leftBuilder_ == null) {
          leftBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              remote.control.android.Command.DriveSignals, remote.control.android.Command.DriveSignals.Builder, remote.control.android.Command.DriveSignalsOrBuilder>(
                  left_,
                  getParentForChildren(),
                  isClean());
          left_ = null;
        }
        return leftBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:remote.control.android.Engines)
    }
    
    static {
      defaultInstance = new Engines(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:remote.control.android.Engines)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_on_hover_android_AccelerometerData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_on_hover_android_AccelerometerData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_on_hover_android_USSensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_on_hover_android_USSensorData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_on_hover_android_I2CSensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_on_hover_android_I2CSensorData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_on_hover_android_DriveSignals_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_on_hover_android_DriveSignals_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_on_hover_android_Engines_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_on_hover_android_Engines_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rCommand.proto\022\020remote.control.android\"F\n\021Acc" +
      "elerometerData\022\017\n\007x_value\030\001 \002(\r\022\017\n\007y_val" +
      "ue\030\002 \002(\r\022\017\n\007z_value\030\003 \002(\r\"e\n\014USSensorDat" +
      "a\022\014\n\004type\030\001 \002(\t\022\023\n\013description\030\002 \002(\t\022\017\n\007" +
      "echopin\030\003 \002(\r\022\022\n\ntriggerpin\030\004 \002(\r\022\r\n\005val" +
      "ue\030\005 \002(\r\"R\n\rI2CSensorData\022\014\n\004type\030\001 \002(\t\022" +
      "\023\n\013description\030\002 \002(\t\022\017\n\007address\030\003 \002(\r\022\r\n" +
      "\005value\030\004 \002(\r\">\n\014DriveSignals\022\017\n\007forward\030" +
      "\001 \002(\010\022\016\n\006enable\030\002 \002(\010\022\r\n\005power\030\003 \002(\r\"f\n\007" +
      "Engines\022-\n\005right\030\001 \002(\0132\036.remote.control.androi",
      "d.DriveSignals\022,\n\004left\030\002 \002(\0132\036.remote.control." +
      "android.DriveSignals"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_on_hover_android_AccelerometerData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_on_hover_android_AccelerometerData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_on_hover_android_AccelerometerData_descriptor,
              new java.lang.String[] { "XValue", "YValue", "ZValue", },
              remote.control.android.Command.AccelerometerData.class,
              remote.control.android.Command.AccelerometerData.Builder.class);
          internal_static_on_hover_android_USSensorData_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_on_hover_android_USSensorData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_on_hover_android_USSensorData_descriptor,
              new java.lang.String[] { "Type", "Description", "Echopin", "Triggerpin", "Value", },
              remote.control.android.Command.USSensorData.class,
              remote.control.android.Command.USSensorData.Builder.class);
          internal_static_on_hover_android_I2CSensorData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_on_hover_android_I2CSensorData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_on_hover_android_I2CSensorData_descriptor,
              new java.lang.String[] { "Type", "Description", "Address", "Value", },
              remote.control.android.Command.I2CSensorData.class,
              remote.control.android.Command.I2CSensorData.Builder.class);
          internal_static_on_hover_android_DriveSignals_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_on_hover_android_DriveSignals_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_on_hover_android_DriveSignals_descriptor,
              new java.lang.String[] { "Forward", "Enable", "Power", },
              remote.control.android.Command.DriveSignals.class,
              remote.control.android.Command.DriveSignals.Builder.class);
          internal_static_on_hover_android_Engines_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_on_hover_android_Engines_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_on_hover_android_Engines_descriptor,
              new java.lang.String[] { "Right", "Left", },
              remote.control.android.Command.Engines.class,
              remote.control.android.Command.Engines.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
